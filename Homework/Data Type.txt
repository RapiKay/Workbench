자료형이란?

그때그때마다 달라질 수 있는 부분.

C언어에서 문자를 표현할 떄 : char
C언어에서 숫자를 표현할 때 : int, float, double
void : 자료형 자체가 없다.
C언어에서는 문자열을 저장하는 string 자료형이 없다. char 자료형만을 사용해야 한다.
===================================================
#include <stdio.h>
#define MONTHS 12			( 상수에 대한 정의를 해주는 부분. 원주율, 사격형을 구하는 공식 등의 정해진 수학적 법칙은 이런식으로 상수로 정의해준다. #define [변수 이름] [상수] )
					
int main(void)
{	
	double monthSalary = 1000.5;		( double 형의 monthSalary 는 1000.5 임을 선언 )
	printf("$ %.2f", monthSalary * MONTHS);	( monthSalary * MONTHS 에서 소수 두번 째 숫자까지 프린팅. $ %.2f 출력 ) 
	return 0;
}
===================================================
#include <stdio.h>

int main(void)
{
	char x = 'A';		( char형에는 문자를 넣을 수 있다. char 형의 x는 A 임을 선언. )
	printf("%c", x);		( %c는 char형의 변수를 출력할 수 있게 해준다. A를 출력 )
	return 0;
}
===================================================
char는 내부적으로 숫자열을 이용하여 운용되고 있다. 표면적으로는 문자가 나오지만, 내부에서는 숫자가 사용된다는 소리이다.

#include <stdio.h>

int main(void)
{
	char x = 65;		
	printf("%c", x);		
	return 0;
}

여기서 출력되는 값은 65가 아닌 문자 A이다. 문자 A는 내부적으로 숫자 65를 가지고 있기 때문 ( 아스키코드 )
====================================================	
#include <stdio.h>

int main(void)
{
	int x = 65;	
	printf("%c", x);		
	return 0;
}

여기서는 x가 int형이지만, 출력되는것은 65가 아닌 A이다. 그 이유는 printf()에서 %c를 사용하여 char형을 출력했기 떄문이다.
====================================================
#include <stdio.h>

int main(void)
{
	char x = 'A';		( char 형인 x는 A임을 선언 )
	printf("%c\n", x);		( char 형의 x를 프린트. A 를 출력 )
	char y = 65;		( char 형인 y는 65임을 선언 )
	printf("%c\n", y);		( char 형의 y를 프린트. A 를 출력 )
	char z = 'B';		( char 형인 z는 B임을 선언 )
	printf("%d\n", z);		( int   형의 z를 프린트. 66을 프린트. B는 66이라는 정수값을 가지고 있고, %d를 사용하여 int값, 즉 정수값을 불려왔기 때문에 B라는 문자가 아닌 66 이라는 정수가 출력된다. )
	return 0;
}
=====================================================
 #include <stdio.h>
 
 int main(void)
 {
 	int x = 100;			( int 형의 x는 100임을 선언 )
 	printf("10진수로 출력 : %d\n", x);	( 10진수로 출력 : 100 을 출력 )
	printf("8진수로 출력 : %o\n", x);	( %o는 10진수를 알아서 알맞는 수에 대응하는 8진수로 바꿔 출력해준다. 8진수로 출력 : 144 )
	printf("16진수로 출력 : %x\n", x);	( %x는 10진수를 알아서 알맞는 수에 대응하는 16진수로 바꿔 출력해준다. 16진수로 출력 : 64 )
 	return 0;
 }
